<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ActionLanguage="http://www.omg.org/spec/ALF/20120827/ActionLanguage-Profile" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.omg.org/spec/ALF/20120827/ActionLanguage-Profile pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_sYse0YZLEeKyw49uR6nx3g">
  <uml:Model xmi:id="_62lbEIgUEeKtquXykzQHVw" name="AssertionLibrary">
    <packageImport xmi:type="uml:PackageImport" xmi:id="_LU_3YI19EeK7gYOtibANUw">
      <importedPackage xmi:type="uml:Model" href="pathmap://PAPYRUS_fUML_LIBRARY/fUML_Library.uml#_0"/>
    </packageImport>
    <packageImport xmi:type="uml:PackageImport" xmi:id="_NEk-oI19EeK7gYOtibANUw" visibility="private">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packageImport xmi:type="uml:PackageImport" xmi:id="_X-RygJGjEeKappQpCeg6XA">
      <importedPackage xmi:type="uml:Model" href="pathmap://PAPYRUS_ALF_LIBRARY/Alf.library.uml#Alf"/>
    </packageImport>
    <packagedElement xmi:type="uml:Activity" xmi:id="_8kE3oIgUEeKtquXykzQHVw" name="AssertEquals">
      <ownedComment xmi:type="uml:Comment" xmi:id="_PWUOoIgVEeKtquXykzQHVw">
        <body>namespace AssertionLibrary ;&#xD;
&#xD;
private import Alf::Library::CollectionFunctions::size ;&#xD;
&#xD;
activity AssertEqual(in label: String, in value1: any, in value2: any) {&#xD;
	Write(label + &quot;==&quot;);&#xD;
	Write(value2 instanceof String? &quot;\&quot;&quot; + (String)value2 + &quot;\&quot;&quot;: value2);&#xD;
	AssertTrue(&quot;&quot;, value1==value2);&#xD;
}</body>
      </ownedComment>
      <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERzsCY1-EeK7gYOtibANUw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ERzsCo1-EeK7gYOtibANUw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ERzsC41-EeK7gYOtibANUw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERzsDI1-EeK7gYOtibANUw" name="value1" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ERzsDY1-EeK7gYOtibANUw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ERzsDo1-EeK7gYOtibANUw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:type="uml:Parameter" xmi:id="_ERzsD41-EeK7gYOtibANUw" name="value2" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ERzsEI1-EeK7gYOtibANUw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ERzsEY1-EeK7gYOtibANUw" value="1"/>
      </ownedParameter>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_9FjNAIgUEeKtquXykzQHVw" name="AssertTrue">
      <ownedComment xmi:type="uml:Comment" xmi:id="_cKvjYIgVEeKtquXykzQHVw">
        <body>namespace AssertionLibrary ;&#xD;
&#xD;
private import Alf::Library::PrimitiveBehaviors::BooleanFunctions::ToString;&#xD;
private import Alf::Library::BasicInputOutput::WriteLine ;&#xD;
&#xD;
activity AssertTrue(in label: String, in condition: Boolean) {&#xD;
	WriteLine(label + &quot;: &quot; + ToString(condition));&#xD;
}</body>
      </ownedComment>
      <ownedParameter xmi:type="uml:Parameter" xmi:id="_l17_do19EeK7gYOtibANUw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_l17_d419EeK7gYOtibANUw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l17_eI19EeK7gYOtibANUw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:type="uml:Parameter" xmi:id="_l17_eY19EeK7gYOtibANUw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_l17_eo19EeK7gYOtibANUw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l17_e419EeK7gYOtibANUw" value="1"/>
      </ownedParameter>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_9tk2UIgUEeKtquXykzQHVw" name="AssertFalse">
      <ownedComment xmi:type="uml:Comment" xmi:id="_qGNYsIgVEeKtquXykzQHVw">
        <body>namespace AssertionLibrary ;&#xD;
&#xD;
private import Alf::Library::PrimitiveBehaviors::BooleanFunctions::ToString;&#xD;
private import Alf::Library::BasicInputOutput::WriteLine ;&#xD;
&#xD;
activity AssertFalse(in label: String, in condition: Boolean) {&#xD;
    WriteLine(&quot;! &quot; + label + &quot;: &quot; + ToString(!condition));&#xD;
}</body>
      </ownedComment>
      <ownedParameter xmi:type="uml:Parameter" xmi:id="_wKWOho19EeK7gYOtibANUw" name="label" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wKWOh419EeK7gYOtibANUw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wKWOiI19EeK7gYOtibANUw" value="1"/>
      </ownedParameter>
      <ownedParameter xmi:type="uml:Parameter" xmi:id="_wKWOiY19EeK7gYOtibANUw" name="condition" visibility="package">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wKWOio19EeK7gYOtibANUw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wKWOi419EeK7gYOtibANUw" value="1"/>
      </ownedParameter>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_-Y3PAIgUEeKtquXykzQHVw" name="AssertList">
      <ownedComment xmi:type="uml:Comment" xmi:id="_2i470IgVEeKtquXykzQHVw">
        <body>namespace AssertionLibrary::AssertList ;&#xD;
&#xD;
private import Alf::Library::CollectionFunctions::size ;&#xD;
private import Alf::Library::PrimitiveBehaviors::* ;&#xD;
&#xD;
activity AssertList(in label: String, in list: any[*] sequence, in expected: any[*] sequence) {&#xD;
	AssertEquals(label + &quot;->size()&quot;, list->size(), expected->size());&#xD;
	for (i in 1..IntegerFunctions::Min(list->size(),expected->size())) {&#xD;
		AssertEquals(label + &quot;[&quot; + IntegerFunctions::ToString(i) + &quot;]&quot;, list[i], expected[i]);&#xD;
	}&#xD;
}</body>
      </ownedComment>
      <ownedParameter xmi:type="uml:Parameter" xmi:id="_AserUJF0EeKLspnMdnbsRA" name="label">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
      <ownedParameter xmi:type="uml:Parameter" xmi:id="_Bqqx4JF0EeKLspnMdnbsRA" name="list" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_KncfoJF0EeKLspnMdnbsRA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_KnmQoJF0EeKLspnMdnbsRA" value="*"/>
      </ownedParameter>
      <ownedParameter xmi:type="uml:Parameter" xmi:id="_BxEU0JF0EeKLspnMdnbsRA" name="expected" isOrdered="true" isUnique="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NEZqQJF0EeKLspnMdnbsRA"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NEZqQZF0EeKLspnMdnbsRA" value="*"/>
      </ownedParameter>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="_Tz8bEIgWEeKtquXykzQHVw" name="Write">
      <ownedComment xmi:type="uml:Comment" xmi:id="_ZaCg4IgWEeKtquXykzQHVw">
        <body>&#xD;
namespace AssertionLibrary ;&#xD;
&#xD;
private import Alf::Library::BasicInputOutput::StandardOutputChannel ;&#xD;
&#xD;
activity Write(in value: any) {&#xD;
	StandardOutputChannel.allInstances()[1].write(value);&#xD;
}</body>
      </ownedComment>
      <ownedParameter xmi:type="uml:Parameter" xmi:id="_Y7osM419EeK7gYOtibANUw" name="value" visibility="package">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Y7osNI19EeK7gYOtibANUw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Y7osNY19EeK7gYOtibANUw" value="1"/>
      </ownedParameter>
    </packagedElement>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_BqabgES8EeS1A8a25jnZOw">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_B0chQES8EeS1A8a25jnZOw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_sYse0YZLEeKyw49uR6nx3g"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
    </profileApplication>
  </uml:Model>
  <ActionLanguage:TextualRepresentation xmi:id="_BqVjAES8EeS1A8a25jnZOw" base_Comment="_PWUOoIgVEeKtquXykzQHVw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_BqWxIES8EeS1A8a25jnZOw" base_Comment="_cKvjYIgVEeKtquXykzQHVw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_BqWxIUS8EeS1A8a25jnZOw" base_Comment="_qGNYsIgVEeKtquXykzQHVw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_BqXYMES8EeS1A8a25jnZOw" base_Comment="_2i470IgVEeKtquXykzQHVw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_BqX_QES8EeS1A8a25jnZOw" base_Comment="_ZaCg4IgWEeKtquXykzQHVw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_BqX_QUS8EeS1A8a25jnZOw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_BqYmUES8EeS1A8a25jnZOw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_BqZNYES8EeS1A8a25jnZOw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_BqZNYUS8EeS1A8a25jnZOw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_BqZ0cES8EeS1A8a25jnZOw"/>
  <ActionLanguage:TextualRepresentation xmi:id="_BqZ0cUS8EeS1A8a25jnZOw"/>
</xmi:XMI>
